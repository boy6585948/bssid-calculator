MerakiBssidCalculator.calculate(mr['model'],mr['mac'],1)


class MerakiBssidCalculator:
    offsets = {}
    offsets["MR32"] = {
        "00:18:0a": {
            "2.4": {
                1: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x00},
                2: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x01},
                3: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x02},
                4: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x03},
                5: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x04},
                6: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x05},
                7: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x06},
                8: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x07},
                9: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x08},
                10: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x09},
                11: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x0A},
                12: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x0B},
                13: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x0C},
                14: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x0D},
                15: {1:0x02,2:0x00,3:0x40,4:0x00,5:0x00,6:0x0E} 
            },
            "5": {
                1: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x00},
                2: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x01},
                3: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x02},
                4: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x03},
                5: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x04},
                6: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x05},
                7: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x06},
                8: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x07},
                9: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x08},
                10: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x09},
                11: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x0A},
                12: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x0B},
                13: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x0C},
                14: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x0D},
                15: {1:0x02,2:0x00,3:0x50,4:0x00,5:0x00,6:0x0E} 
            }
        }
    }
    def calculate(ap_model,ap_mac,ssid_number):
        bssids = { "2.4": MerakiBssidCalculator.calculate_bssid(
                            ap_mac,
                            MerakiBssidCalculator.offsets[ap_model][ap_mac[:8]]["2.4"][ssid_number]
                        )
                    }
        bssids["5"] = MerakiBssidCalculator.calculate_bssid(
                            ap_mac,
                            MerakiBssidCalculator.offsets[ap_model][ap_mac[:8]]["5"][ssid_number]
                        )
        return bssids
    def calculate_bssid(ap_mac,offsets):
        ap_octets = ap_mac.split(":")
        bssid_octets = []
        for i,octet in enumerate(ap_octets):
            bssid_octets.append(MerakiBssidCalculator.calculate_octet(octet,offsets[i+1]))
        return ":".join(bssid_octets)
    def calculate_octet(octet,offset):
        return hex(int(octet,16) + offset)[2:].zfill(2)



